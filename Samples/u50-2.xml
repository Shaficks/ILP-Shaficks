<!-- ;;; $Id$ — "discriminant negatif: aucune racine" — "discriminant positif: 
    deux racines" — "discriminant nul: une seule racine" ;;; end of discriminant.scm 
    
    Auteur : Chafik NOUIRA
    TME n° 1
-->
<program><!-- test:result value='710' -->

<block>

    <bindings>
        <binding>
            <variable name="a"/><initialisation><integer value="2"/></initialisation>
        </binding>
        <binding>
            <variable name="b"/><initialisation><integer value="4"/></initialisation>
        </binding>
        <binding>
            <variable name="c"/><initialisation><integer value="2"/></initialisation>
        </binding>
        
        <binding>
            <variable name="c"/>
                <initialisation>
                    <binaryOperation operator="-">
                        <leftOperand>
                            <!-- (b*b) -->
                            <binaryOperation operator="*">
                                <leftOperand><variable name="b"/></leftOperand>
                                <rightOperand><variable name="b"/></rightOperand>
                            </binaryOperation>
                        </leftOperand>
                        <rightOperand>
                            <!-- (4*(a*c)) -->
                            <binaryOperation operator="*">
                                <leftOperand><integer value="4"/></leftOperand>
                                <rightOperand>
                                    <!-- (a*c) -->
                                    <binaryOperation operator="*">
                                        <leftOperand><variable name="a"/></leftOperand>
                                        <rightOperand><variable name="c"/></rightOperand>
                                    </binaryOperation>
                                </rightOperand>
                            </binaryOperation>
                        </rightOperand>
                    </binaryOperation>
                </initialisation>
        </binding>
        
    </bindings>
    
    
    <body>
        <alternative>
            <condition>
                <binaryOperation operator=">">
                    <leftOperand><variable name="d"></variable></leftOperand>
                    <rightOperand><integer value="0"/></rightOperand>
                </binaryOperation>
            </condition>
            <consequence>
                <invocation>
                    <function><variable name='print'/></function>
                    <arguments>
                        <string>discriminant positif: deux racines</string>
                    </arguments>
                </invocation>
                <integer value = "1"/>
            </consequence>
            <alternant>
                <alternative>
                    <condition>
                        <binaryOperation operator="==">
                            <leftOperand><variable name="d"></variable></leftOperand>
                            <rightOperand><integer value="0"/></rightOperand>
                        </binaryOperation>
                    </condition>
                    <consequence>
                        <invocation>
                            <function><variable name='print'/></function>
                            <arguments>
                                <string>discriminant nul: une seule racine</string>
                            </arguments>
                        </invocation>   
                        <integer value = "1"/>                
                    </consequence>
                    <alternant>
                        <invocation>
                            <function><variable name='print'/></function>
                            <arguments>
                                <string>discriminant negatif: aucune racine</string>
                            </arguments>
                        </invocation>   
                        <integer value = "1"/>                  
                    </alternant>
                </alternative>
            </alternant>
        </alternative>
    </body>
</block>

</program>
